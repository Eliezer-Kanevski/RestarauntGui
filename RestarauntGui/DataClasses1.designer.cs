#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RestarauntGui
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="master")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPERSON(PERSON instance);
    partial void UpdatePERSON(PERSON instance);
    partial void DeletePERSON(PERSON instance);
    partial void InsertEMPLOYEE(EMPLOYEE instance);
    partial void UpdateEMPLOYEE(EMPLOYEE instance);
    partial void DeleteEMPLOYEE(EMPLOYEE instance);
    partial void InsertCUSTOMER(CUSTOMER instance);
    partial void UpdateCUSTOMER(CUSTOMER instance);
    partial void DeleteCUSTOMER(CUSTOMER instance);
    partial void InsertADDRESS1(ADDRESS1 instance);
    partial void UpdateADDRESS1(ADDRESS1 instance);
    partial void DeleteADDRESS1(ADDRESS1 instance);
    partial void InsertPAYMENT(PAYMENT instance);
    partial void UpdatePAYMENT(PAYMENT instance);
    partial void DeletePAYMENT(PAYMENT instance);
    partial void InsertMENU(MENU instance);
    partial void UpdateMENU(MENU instance);
    partial void DeleteMENU(MENU instance);
    partial void InsertITEM(ITEM instance);
    partial void UpdateITEM(ITEM instance);
    partial void DeleteITEM(ITEM instance);
    partial void InsertINGREDIENT(INGREDIENT instance);
    partial void UpdateINGREDIENT(INGREDIENT instance);
    partial void DeleteINGREDIENT(INGREDIENT instance);
    partial void InsertITEM_HAS_INGREDIENT(ITEM_HAS_INGREDIENT instance);
    partial void UpdateITEM_HAS_INGREDIENT(ITEM_HAS_INGREDIENT instance);
    partial void DeleteITEM_HAS_INGREDIENT(ITEM_HAS_INGREDIENT instance);
    partial void InsertMENU_HAS_ITEM(MENU_HAS_ITEM instance);
    partial void UpdateMENU_HAS_ITEM(MENU_HAS_ITEM instance);
    partial void DeleteMENU_HAS_ITEM(MENU_HAS_ITEM instance);
    partial void InsertORDER(ORDER instance);
    partial void UpdateORDER(ORDER instance);
    partial void DeleteORDER(ORDER instance);
    partial void InsertORDER_HAS_ITEM(ORDER_HAS_ITEM instance);
    partial void UpdateORDER_HAS_ITEM(ORDER_HAS_ITEM instance);
    partial void DeleteORDER_HAS_ITEM(ORDER_HAS_ITEM instance);
    partial void InsertCUSTOMER_HAS_ORDER(CUSTOMER_HAS_ORDER instance);
    partial void UpdateCUSTOMER_HAS_ORDER(CUSTOMER_HAS_ORDER instance);
    partial void DeleteCUSTOMER_HAS_ORDER(CUSTOMER_HAS_ORDER instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::RestarauntGui.Properties.Settings.Default.masterConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PERSON> PERSONs
		{
			get
			{
				return this.GetTable<PERSON>();
			}
		}
		
		public System.Data.Linq.Table<EMPLOYEE> EMPLOYEEs
		{
			get
			{
				return this.GetTable<EMPLOYEE>();
			}
		}
		
		public System.Data.Linq.Table<CUSTOMER> CUSTOMERs
		{
			get
			{
				return this.GetTable<CUSTOMER>();
			}
		}
		
		public System.Data.Linq.Table<ADDRESS1> ADDRESS1s
		{
			get
			{
				return this.GetTable<ADDRESS1>();
			}
		}
		
		public System.Data.Linq.Table<PAYMENT> PAYMENTs
		{
			get
			{
				return this.GetTable<PAYMENT>();
			}
		}
		
		public System.Data.Linq.Table<MENU> MENUs
		{
			get
			{
				return this.GetTable<MENU>();
			}
		}
		
		public System.Data.Linq.Table<ITEM> ITEMs
		{
			get
			{
				return this.GetTable<ITEM>();
			}
		}
		
		public System.Data.Linq.Table<INGREDIENT> INGREDIENTs
		{
			get
			{
				return this.GetTable<INGREDIENT>();
			}
		}
		
		public System.Data.Linq.Table<ITEM_HAS_INGREDIENT> ITEM_HAS_INGREDIENTs
		{
			get
			{
				return this.GetTable<ITEM_HAS_INGREDIENT>();
			}
		}
		
		public System.Data.Linq.Table<MENU_HAS_ITEM> MENU_HAS_ITEMs
		{
			get
			{
				return this.GetTable<MENU_HAS_ITEM>();
			}
		}
		
		public System.Data.Linq.Table<ORDER> ORDERs
		{
			get
			{
				return this.GetTable<ORDER>();
			}
		}
		
		public System.Data.Linq.Table<ORDER_HAS_ITEM> ORDER_HAS_ITEMs
		{
			get
			{
				return this.GetTable<ORDER_HAS_ITEM>();
			}
		}
		
		public System.Data.Linq.Table<CUSTOMER_HAS_ORDER> CUSTOMER_HAS_ORDERs
		{
			get
			{
				return this.GetTable<CUSTOMER_HAS_ORDER>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.YEARLY_REVENUE", IsComposable=true)]
		public System.Nullable<decimal> YEARLY_REVENUE([global::System.Data.Linq.Mapping.ParameterAttribute(Name="YEAR", DbType="Int")] System.Nullable<int> yEAR)
		{
			return ((System.Nullable<decimal>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), yEAR).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DELETE_ORDER")]
		public int DELETE_ORDER([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ORDER_NUMBER", DbType="Int")] System.Nullable<int> oRDER_NUMBER)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), oRDER_NUMBER);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GiftGoodCustomers")]
		public int GiftGoodCustomers()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RAISE_ITEM_PRICES")]
		public int RAISE_ITEM_PRICES([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SMALL_RAISE", DbType="Float")] System.Nullable<double> sMALL_RAISE, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LARGE_RAISE", DbType="Float")] System.Nullable<double> lARGE_RAISE, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PRICE_FOR_SMALL_ITEMS", DbType="Int")] System.Nullable<int> pRICE_FOR_SMALL_ITEMS)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sMALL_RAISE, lARGE_RAISE, pRICE_FOR_SMALL_ITEMS);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SelectSortedOrders")]
		public ISingleResult<SelectSortedOrdersResult> SelectSortedOrders([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PaymentStatus", DbType="VarChar(13)")] string paymentStatus)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), paymentStatus);
			return ((ISingleResult<SelectSortedOrdersResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UPDATE_ORDER_TOTAL")]
		public int UPDATE_ORDER_TOTAL([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ORDER_ID", DbType="Int")] System.Nullable<int> oRDER_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ORIGINAL_TOTAL", DbType="Decimal(18,0)")] System.Nullable<decimal> oRIGINAL_TOTAL, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NEW_TOTAL", DbType="Decimal(18,0)")] System.Nullable<decimal> nEW_TOTAL)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), oRDER_ID, oRIGINAL_TOTAL, nEW_TOTAL);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PERSON")]
	public partial class PERSON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PERSON_ID;
		
		private string _FNAME;
		
		private string _LNAME;
		
		private string _PHONE;
		
		private System.DateTime _CREATED_AT;
		
		private System.DateTime _UPDATED_AT;
		
		private System.DateTime _DOB;
		
		private string _EMAIL;
		
		private bool _IS_EMPLOYEE;
		
		private bool _IS_CUSTOMER;
		
		private EntitySet<EMPLOYEE> _EMPLOYEEs;
		
		private EntitySet<CUSTOMER> _CUSTOMERs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPERSON_IDChanging(int value);
    partial void OnPERSON_IDChanged();
    partial void OnFNAMEChanging(string value);
    partial void OnFNAMEChanged();
    partial void OnLNAMEChanging(string value);
    partial void OnLNAMEChanged();
    partial void OnPHONEChanging(string value);
    partial void OnPHONEChanged();
    partial void OnCREATED_ATChanging(System.DateTime value);
    partial void OnCREATED_ATChanged();
    partial void OnUPDATED_ATChanging(System.DateTime value);
    partial void OnUPDATED_ATChanged();
    partial void OnDOBChanging(System.DateTime value);
    partial void OnDOBChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnIS_EMPLOYEEChanging(bool value);
    partial void OnIS_EMPLOYEEChanged();
    partial void OnIS_CUSTOMERChanging(bool value);
    partial void OnIS_CUSTOMERChanged();
    #endregion
		
		public PERSON()
		{
			this._EMPLOYEEs = new EntitySet<EMPLOYEE>(new Action<EMPLOYEE>(this.attach_EMPLOYEEs), new Action<EMPLOYEE>(this.detach_EMPLOYEEs));
			this._CUSTOMERs = new EntitySet<CUSTOMER>(new Action<CUSTOMER>(this.attach_CUSTOMERs), new Action<CUSTOMER>(this.detach_CUSTOMERs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PERSON_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PERSON_ID
		{
			get
			{
				return this._PERSON_ID;
			}
			set
			{
				if ((this._PERSON_ID != value))
				{
					this.OnPERSON_IDChanging(value);
					this.SendPropertyChanging();
					this._PERSON_ID = value;
					this.SendPropertyChanged("PERSON_ID");
					this.OnPERSON_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FNAME", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string FNAME
		{
			get
			{
				return this._FNAME;
			}
			set
			{
				if ((this._FNAME != value))
				{
					this.OnFNAMEChanging(value);
					this.SendPropertyChanging();
					this._FNAME = value;
					this.SendPropertyChanged("FNAME");
					this.OnFNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LNAME", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string LNAME
		{
			get
			{
				return this._LNAME;
			}
			set
			{
				if ((this._LNAME != value))
				{
					this.OnLNAMEChanging(value);
					this.SendPropertyChanging();
					this._LNAME = value;
					this.SendPropertyChanged("LNAME");
					this.OnLNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHONE", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string PHONE
		{
			get
			{
				return this._PHONE;
			}
			set
			{
				if ((this._PHONE != value))
				{
					this.OnPHONEChanging(value);
					this.SendPropertyChanging();
					this._PHONE = value;
					this.SendPropertyChanged("PHONE");
					this.OnPHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATED_AT", DbType="Date NOT NULL")]
		public System.DateTime CREATED_AT
		{
			get
			{
				return this._CREATED_AT;
			}
			set
			{
				if ((this._CREATED_AT != value))
				{
					this.OnCREATED_ATChanging(value);
					this.SendPropertyChanging();
					this._CREATED_AT = value;
					this.SendPropertyChanged("CREATED_AT");
					this.OnCREATED_ATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPDATED_AT", DbType="Date NOT NULL")]
		public System.DateTime UPDATED_AT
		{
			get
			{
				return this._UPDATED_AT;
			}
			set
			{
				if ((this._UPDATED_AT != value))
				{
					this.OnUPDATED_ATChanging(value);
					this.SendPropertyChanging();
					this._UPDATED_AT = value;
					this.SendPropertyChanged("UPDATED_AT");
					this.OnUPDATED_ATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="Date NOT NULL")]
		public System.DateTime DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_EMPLOYEE", DbType="Bit NOT NULL")]
		public bool IS_EMPLOYEE
		{
			get
			{
				return this._IS_EMPLOYEE;
			}
			set
			{
				if ((this._IS_EMPLOYEE != value))
				{
					this.OnIS_EMPLOYEEChanging(value);
					this.SendPropertyChanging();
					this._IS_EMPLOYEE = value;
					this.SendPropertyChanged("IS_EMPLOYEE");
					this.OnIS_EMPLOYEEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_CUSTOMER", DbType="Bit NOT NULL")]
		public bool IS_CUSTOMER
		{
			get
			{
				return this._IS_CUSTOMER;
			}
			set
			{
				if ((this._IS_CUSTOMER != value))
				{
					this.OnIS_CUSTOMERChanging(value);
					this.SendPropertyChanging();
					this._IS_CUSTOMER = value;
					this.SendPropertyChanged("IS_CUSTOMER");
					this.OnIS_CUSTOMERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSON_EMPLOYEE", Storage="_EMPLOYEEs", ThisKey="PERSON_ID", OtherKey="PERSON_ID")]
		public EntitySet<EMPLOYEE> EMPLOYEEs
		{
			get
			{
				return this._EMPLOYEEs;
			}
			set
			{
				this._EMPLOYEEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSON_CUSTOMER", Storage="_CUSTOMERs", ThisKey="PERSON_ID", OtherKey="PERSON_ID")]
		public EntitySet<CUSTOMER> CUSTOMERs
		{
			get
			{
				return this._CUSTOMERs;
			}
			set
			{
				this._CUSTOMERs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EMPLOYEEs(EMPLOYEE entity)
		{
			this.SendPropertyChanging();
			entity.PERSON = this;
		}
		
		private void detach_EMPLOYEEs(EMPLOYEE entity)
		{
			this.SendPropertyChanging();
			entity.PERSON = null;
		}
		
		private void attach_CUSTOMERs(CUSTOMER entity)
		{
			this.SendPropertyChanging();
			entity.PERSON = this;
		}
		
		private void detach_CUSTOMERs(CUSTOMER entity)
		{
			this.SendPropertyChanging();
			entity.PERSON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EMPLOYEE")]
	public partial class EMPLOYEE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EMP_ID;
		
		private int _PERSON_ID;
		
		private System.DateTime _EMP_HIRE_DATE;
		
		private string _EMP_EMAIL;
		
		private decimal _EMP_STARTING_SALARY;
		
		private decimal _EMP_CURRENT_SALARY;
		
		private string _EMP_TITLE;
		
		private EntityRef<PERSON> _PERSON;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEMP_IDChanging(int value);
    partial void OnEMP_IDChanged();
    partial void OnPERSON_IDChanging(int value);
    partial void OnPERSON_IDChanged();
    partial void OnEMP_HIRE_DATEChanging(System.DateTime value);
    partial void OnEMP_HIRE_DATEChanged();
    partial void OnEMP_EMAILChanging(string value);
    partial void OnEMP_EMAILChanged();
    partial void OnEMP_STARTING_SALARYChanging(decimal value);
    partial void OnEMP_STARTING_SALARYChanged();
    partial void OnEMP_CURRENT_SALARYChanging(decimal value);
    partial void OnEMP_CURRENT_SALARYChanged();
    partial void OnEMP_TITLEChanging(string value);
    partial void OnEMP_TITLEChanged();
    #endregion
		
		public EMPLOYEE()
		{
			this._PERSON = default(EntityRef<PERSON>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EMP_ID
		{
			get
			{
				return this._EMP_ID;
			}
			set
			{
				if ((this._EMP_ID != value))
				{
					this.OnEMP_IDChanging(value);
					this.SendPropertyChanging();
					this._EMP_ID = value;
					this.SendPropertyChanged("EMP_ID");
					this.OnEMP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PERSON_ID", DbType="Int NOT NULL")]
		public int PERSON_ID
		{
			get
			{
				return this._PERSON_ID;
			}
			set
			{
				if ((this._PERSON_ID != value))
				{
					if (this._PERSON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPERSON_IDChanging(value);
					this.SendPropertyChanging();
					this._PERSON_ID = value;
					this.SendPropertyChanged("PERSON_ID");
					this.OnPERSON_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_HIRE_DATE", DbType="Date NOT NULL")]
		public System.DateTime EMP_HIRE_DATE
		{
			get
			{
				return this._EMP_HIRE_DATE;
			}
			set
			{
				if ((this._EMP_HIRE_DATE != value))
				{
					this.OnEMP_HIRE_DATEChanging(value);
					this.SendPropertyChanging();
					this._EMP_HIRE_DATE = value;
					this.SendPropertyChanged("EMP_HIRE_DATE");
					this.OnEMP_HIRE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_EMAIL", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string EMP_EMAIL
		{
			get
			{
				return this._EMP_EMAIL;
			}
			set
			{
				if ((this._EMP_EMAIL != value))
				{
					this.OnEMP_EMAILChanging(value);
					this.SendPropertyChanging();
					this._EMP_EMAIL = value;
					this.SendPropertyChanged("EMP_EMAIL");
					this.OnEMP_EMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_STARTING_SALARY", DbType="Decimal(18,0) NOT NULL")]
		public decimal EMP_STARTING_SALARY
		{
			get
			{
				return this._EMP_STARTING_SALARY;
			}
			set
			{
				if ((this._EMP_STARTING_SALARY != value))
				{
					this.OnEMP_STARTING_SALARYChanging(value);
					this.SendPropertyChanging();
					this._EMP_STARTING_SALARY = value;
					this.SendPropertyChanged("EMP_STARTING_SALARY");
					this.OnEMP_STARTING_SALARYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_CURRENT_SALARY", DbType="Decimal(18,0) NOT NULL")]
		public decimal EMP_CURRENT_SALARY
		{
			get
			{
				return this._EMP_CURRENT_SALARY;
			}
			set
			{
				if ((this._EMP_CURRENT_SALARY != value))
				{
					this.OnEMP_CURRENT_SALARYChanging(value);
					this.SendPropertyChanging();
					this._EMP_CURRENT_SALARY = value;
					this.SendPropertyChanged("EMP_CURRENT_SALARY");
					this.OnEMP_CURRENT_SALARYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_TITLE", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string EMP_TITLE
		{
			get
			{
				return this._EMP_TITLE;
			}
			set
			{
				if ((this._EMP_TITLE != value))
				{
					this.OnEMP_TITLEChanging(value);
					this.SendPropertyChanging();
					this._EMP_TITLE = value;
					this.SendPropertyChanged("EMP_TITLE");
					this.OnEMP_TITLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSON_EMPLOYEE", Storage="_PERSON", ThisKey="PERSON_ID", OtherKey="PERSON_ID", IsForeignKey=true)]
		public PERSON PERSON
		{
			get
			{
				return this._PERSON.Entity;
			}
			set
			{
				PERSON previousValue = this._PERSON.Entity;
				if (((previousValue != value) 
							|| (this._PERSON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERSON.Entity = null;
						previousValue.EMPLOYEEs.Remove(this);
					}
					this._PERSON.Entity = value;
					if ((value != null))
					{
						value.EMPLOYEEs.Add(this);
						this._PERSON_ID = value.PERSON_ID;
					}
					else
					{
						this._PERSON_ID = default(int);
					}
					this.SendPropertyChanged("PERSON");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUSTOMER")]
	public partial class CUSTOMER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CUST_ID;
		
		private int _PERSON_ID;
		
		private System.DateTime _CUST_CREATED_AT;
		
		private System.DateTime _CUST_UPDATED_AT;
		
		private string _CUST_USERNAME;
		
		private string _CUST_PASSWORD;
		
		private decimal _CUST_BALANCE;
		
		private EntitySet<ADDRESS1> _ADDRESS1s;
		
		private EntitySet<PAYMENT> _PAYMENTs;
		
		private EntitySet<CUSTOMER_HAS_ORDER> _CUSTOMER_HAS_ORDERs;
		
		private EntityRef<PERSON> _PERSON;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCUST_IDChanging(int value);
    partial void OnCUST_IDChanged();
    partial void OnPERSON_IDChanging(int value);
    partial void OnPERSON_IDChanged();
    partial void OnCUST_CREATED_ATChanging(System.DateTime value);
    partial void OnCUST_CREATED_ATChanged();
    partial void OnCUST_UPDATED_ATChanging(System.DateTime value);
    partial void OnCUST_UPDATED_ATChanged();
    partial void OnCUST_USERNAMEChanging(string value);
    partial void OnCUST_USERNAMEChanged();
    partial void OnCUST_PASSWORDChanging(string value);
    partial void OnCUST_PASSWORDChanged();
    partial void OnCUST_BALANCEChanging(decimal value);
    partial void OnCUST_BALANCEChanged();
    #endregion
		
		public CUSTOMER()
		{
			this._ADDRESS1s = new EntitySet<ADDRESS1>(new Action<ADDRESS1>(this.attach_ADDRESS1s), new Action<ADDRESS1>(this.detach_ADDRESS1s));
			this._PAYMENTs = new EntitySet<PAYMENT>(new Action<PAYMENT>(this.attach_PAYMENTs), new Action<PAYMENT>(this.detach_PAYMENTs));
			this._CUSTOMER_HAS_ORDERs = new EntitySet<CUSTOMER_HAS_ORDER>(new Action<CUSTOMER_HAS_ORDER>(this.attach_CUSTOMER_HAS_ORDERs), new Action<CUSTOMER_HAS_ORDER>(this.detach_CUSTOMER_HAS_ORDERs));
			this._PERSON = default(EntityRef<PERSON>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUST_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CUST_ID
		{
			get
			{
				return this._CUST_ID;
			}
			set
			{
				if ((this._CUST_ID != value))
				{
					this.OnCUST_IDChanging(value);
					this.SendPropertyChanging();
					this._CUST_ID = value;
					this.SendPropertyChanged("CUST_ID");
					this.OnCUST_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PERSON_ID", DbType="Int NOT NULL")]
		public int PERSON_ID
		{
			get
			{
				return this._PERSON_ID;
			}
			set
			{
				if ((this._PERSON_ID != value))
				{
					if (this._PERSON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPERSON_IDChanging(value);
					this.SendPropertyChanging();
					this._PERSON_ID = value;
					this.SendPropertyChanged("PERSON_ID");
					this.OnPERSON_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUST_CREATED_AT", DbType="Date NOT NULL")]
		public System.DateTime CUST_CREATED_AT
		{
			get
			{
				return this._CUST_CREATED_AT;
			}
			set
			{
				if ((this._CUST_CREATED_AT != value))
				{
					this.OnCUST_CREATED_ATChanging(value);
					this.SendPropertyChanging();
					this._CUST_CREATED_AT = value;
					this.SendPropertyChanged("CUST_CREATED_AT");
					this.OnCUST_CREATED_ATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUST_UPDATED_AT", DbType="Date NOT NULL")]
		public System.DateTime CUST_UPDATED_AT
		{
			get
			{
				return this._CUST_UPDATED_AT;
			}
			set
			{
				if ((this._CUST_UPDATED_AT != value))
				{
					this.OnCUST_UPDATED_ATChanging(value);
					this.SendPropertyChanging();
					this._CUST_UPDATED_AT = value;
					this.SendPropertyChanged("CUST_UPDATED_AT");
					this.OnCUST_UPDATED_ATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUST_USERNAME", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string CUST_USERNAME
		{
			get
			{
				return this._CUST_USERNAME;
			}
			set
			{
				if ((this._CUST_USERNAME != value))
				{
					this.OnCUST_USERNAMEChanging(value);
					this.SendPropertyChanging();
					this._CUST_USERNAME = value;
					this.SendPropertyChanged("CUST_USERNAME");
					this.OnCUST_USERNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUST_PASSWORD", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string CUST_PASSWORD
		{
			get
			{
				return this._CUST_PASSWORD;
			}
			set
			{
				if ((this._CUST_PASSWORD != value))
				{
					this.OnCUST_PASSWORDChanging(value);
					this.SendPropertyChanging();
					this._CUST_PASSWORD = value;
					this.SendPropertyChanged("CUST_PASSWORD");
					this.OnCUST_PASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUST_BALANCE", DbType="Decimal(18,0) NOT NULL")]
		public decimal CUST_BALANCE
		{
			get
			{
				return this._CUST_BALANCE;
			}
			set
			{
				if ((this._CUST_BALANCE != value))
				{
					this.OnCUST_BALANCEChanging(value);
					this.SendPropertyChanging();
					this._CUST_BALANCE = value;
					this.SendPropertyChanged("CUST_BALANCE");
					this.OnCUST_BALANCEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_ADDRESS1", Storage="_ADDRESS1s", ThisKey="CUST_ID", OtherKey="CUST_ID")]
		public EntitySet<ADDRESS1> ADDRESS1s
		{
			get
			{
				return this._ADDRESS1s;
			}
			set
			{
				this._ADDRESS1s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_PAYMENT", Storage="_PAYMENTs", ThisKey="CUST_ID", OtherKey="CUST_ID")]
		public EntitySet<PAYMENT> PAYMENTs
		{
			get
			{
				return this._PAYMENTs;
			}
			set
			{
				this._PAYMENTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_CUSTOMER_HAS_ORDER", Storage="_CUSTOMER_HAS_ORDERs", ThisKey="CUST_ID", OtherKey="CUST_ID")]
		public EntitySet<CUSTOMER_HAS_ORDER> CUSTOMER_HAS_ORDERs
		{
			get
			{
				return this._CUSTOMER_HAS_ORDERs;
			}
			set
			{
				this._CUSTOMER_HAS_ORDERs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERSON_CUSTOMER", Storage="_PERSON", ThisKey="PERSON_ID", OtherKey="PERSON_ID", IsForeignKey=true)]
		public PERSON PERSON
		{
			get
			{
				return this._PERSON.Entity;
			}
			set
			{
				PERSON previousValue = this._PERSON.Entity;
				if (((previousValue != value) 
							|| (this._PERSON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERSON.Entity = null;
						previousValue.CUSTOMERs.Remove(this);
					}
					this._PERSON.Entity = value;
					if ((value != null))
					{
						value.CUSTOMERs.Add(this);
						this._PERSON_ID = value.PERSON_ID;
					}
					else
					{
						this._PERSON_ID = default(int);
					}
					this.SendPropertyChanged("PERSON");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADDRESS1s(ADDRESS1 entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = this;
		}
		
		private void detach_ADDRESS1s(ADDRESS1 entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = null;
		}
		
		private void attach_PAYMENTs(PAYMENT entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = this;
		}
		
		private void detach_PAYMENTs(PAYMENT entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = null;
		}
		
		private void attach_CUSTOMER_HAS_ORDERs(CUSTOMER_HAS_ORDER entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = this;
		}
		
		private void detach_CUSTOMER_HAS_ORDERs(CUSTOMER_HAS_ORDER entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADDRESS")]
	public partial class ADDRESS1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CUST_ID;
		
		private string _ADDRESS;
		
		private string _CITY;
		
		private string _STATE;
		
		private string _COUNTRY;
		
		private string _PHONE;
		
		private EntityRef<CUSTOMER> _CUSTOMER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCUST_IDChanging(int value);
    partial void OnCUST_IDChanged();
    partial void OnADDRESSChanging(string value);
    partial void OnADDRESSChanged();
    partial void OnCITYChanging(string value);
    partial void OnCITYChanged();
    partial void OnSTATEChanging(string value);
    partial void OnSTATEChanged();
    partial void OnCOUNTRYChanging(string value);
    partial void OnCOUNTRYChanged();
    partial void OnPHONEChanging(string value);
    partial void OnPHONEChanged();
    #endregion
		
		public ADDRESS1()
		{
			this._CUSTOMER = default(EntityRef<CUSTOMER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUST_ID", DbType="Int NOT NULL")]
		public int CUST_ID
		{
			get
			{
				return this._CUST_ID;
			}
			set
			{
				if ((this._CUST_ID != value))
				{
					if (this._CUSTOMER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCUST_IDChanging(value);
					this.SendPropertyChanging();
					this._CUST_ID = value;
					this.SendPropertyChanged("CUST_ID");
					this.OnCUST_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDRESS", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string ADDRESS
		{
			get
			{
				return this._ADDRESS;
			}
			set
			{
				if ((this._ADDRESS != value))
				{
					this.OnADDRESSChanging(value);
					this.SendPropertyChanging();
					this._ADDRESS = value;
					this.SendPropertyChanged("ADDRESS");
					this.OnADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITY", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string CITY
		{
			get
			{
				return this._CITY;
			}
			set
			{
				if ((this._CITY != value))
				{
					this.OnCITYChanging(value);
					this.SendPropertyChanging();
					this._CITY = value;
					this.SendPropertyChanged("CITY");
					this.OnCITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string STATE
		{
			get
			{
				return this._STATE;
			}
			set
			{
				if ((this._STATE != value))
				{
					this.OnSTATEChanging(value);
					this.SendPropertyChanging();
					this._STATE = value;
					this.SendPropertyChanged("STATE");
					this.OnSTATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTRY", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string COUNTRY
		{
			get
			{
				return this._COUNTRY;
			}
			set
			{
				if ((this._COUNTRY != value))
				{
					this.OnCOUNTRYChanging(value);
					this.SendPropertyChanging();
					this._COUNTRY = value;
					this.SendPropertyChanged("COUNTRY");
					this.OnCOUNTRYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHONE", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string PHONE
		{
			get
			{
				return this._PHONE;
			}
			set
			{
				if ((this._PHONE != value))
				{
					this.OnPHONEChanging(value);
					this.SendPropertyChanging();
					this._PHONE = value;
					this.SendPropertyChanged("PHONE");
					this.OnPHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_ADDRESS1", Storage="_CUSTOMER", ThisKey="CUST_ID", OtherKey="CUST_ID", IsForeignKey=true)]
		public CUSTOMER CUSTOMER
		{
			get
			{
				return this._CUSTOMER.Entity;
			}
			set
			{
				CUSTOMER previousValue = this._CUSTOMER.Entity;
				if (((previousValue != value) 
							|| (this._CUSTOMER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUSTOMER.Entity = null;
						previousValue.ADDRESS1s.Remove(this);
					}
					this._CUSTOMER.Entity = value;
					if ((value != null))
					{
						value.ADDRESS1s.Add(this);
						this._CUST_ID = value.CUST_ID;
					}
					else
					{
						this._CUST_ID = default(int);
					}
					this.SendPropertyChanged("CUSTOMER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PAYMENT")]
	public partial class PAYMENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CUST_ID;
		
		private string _TYPE;
		
		private string _PROVIDER;
		
		private string _CARD_NUMBER;
		
		private System.DateTime _EXPIRE_DATE;
		
		private EntityRef<CUSTOMER> _CUSTOMER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCUST_IDChanging(int value);
    partial void OnCUST_IDChanged();
    partial void OnTYPEChanging(string value);
    partial void OnTYPEChanged();
    partial void OnPROVIDERChanging(string value);
    partial void OnPROVIDERChanged();
    partial void OnCARD_NUMBERChanging(string value);
    partial void OnCARD_NUMBERChanged();
    partial void OnEXPIRE_DATEChanging(System.DateTime value);
    partial void OnEXPIRE_DATEChanged();
    #endregion
		
		public PAYMENT()
		{
			this._CUSTOMER = default(EntityRef<CUSTOMER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUST_ID", DbType="Int NOT NULL")]
		public int CUST_ID
		{
			get
			{
				return this._CUST_ID;
			}
			set
			{
				if ((this._CUST_ID != value))
				{
					if (this._CUSTOMER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCUST_IDChanging(value);
					this.SendPropertyChanging();
					this._CUST_ID = value;
					this.SendPropertyChanged("CUST_ID");
					this.OnCUST_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYPE", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string TYPE
		{
			get
			{
				return this._TYPE;
			}
			set
			{
				if ((this._TYPE != value))
				{
					this.OnTYPEChanging(value);
					this.SendPropertyChanging();
					this._TYPE = value;
					this.SendPropertyChanged("TYPE");
					this.OnTYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROVIDER", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string PROVIDER
		{
			get
			{
				return this._PROVIDER;
			}
			set
			{
				if ((this._PROVIDER != value))
				{
					this.OnPROVIDERChanging(value);
					this.SendPropertyChanging();
					this._PROVIDER = value;
					this.SendPropertyChanged("PROVIDER");
					this.OnPROVIDERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CARD_NUMBER", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string CARD_NUMBER
		{
			get
			{
				return this._CARD_NUMBER;
			}
			set
			{
				if ((this._CARD_NUMBER != value))
				{
					this.OnCARD_NUMBERChanging(value);
					this.SendPropertyChanging();
					this._CARD_NUMBER = value;
					this.SendPropertyChanged("CARD_NUMBER");
					this.OnCARD_NUMBERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXPIRE_DATE", DbType="Date NOT NULL")]
		public System.DateTime EXPIRE_DATE
		{
			get
			{
				return this._EXPIRE_DATE;
			}
			set
			{
				if ((this._EXPIRE_DATE != value))
				{
					this.OnEXPIRE_DATEChanging(value);
					this.SendPropertyChanging();
					this._EXPIRE_DATE = value;
					this.SendPropertyChanged("EXPIRE_DATE");
					this.OnEXPIRE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_PAYMENT", Storage="_CUSTOMER", ThisKey="CUST_ID", OtherKey="CUST_ID", IsForeignKey=true)]
		public CUSTOMER CUSTOMER
		{
			get
			{
				return this._CUSTOMER.Entity;
			}
			set
			{
				CUSTOMER previousValue = this._CUSTOMER.Entity;
				if (((previousValue != value) 
							|| (this._CUSTOMER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUSTOMER.Entity = null;
						previousValue.PAYMENTs.Remove(this);
					}
					this._CUSTOMER.Entity = value;
					if ((value != null))
					{
						value.PAYMENTs.Add(this);
						this._CUST_ID = value.CUST_ID;
					}
					else
					{
						this._CUST_ID = default(int);
					}
					this.SendPropertyChanged("CUSTOMER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MENU")]
	public partial class MENU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _M_ID;
		
		private string _M_NAME;
		
		private string _M_DESCRIPTION;
		
		private System.DateTime _M_CREATED_AT;
		
		private System.DateTime _M_UPDATED_AT;
		
		private EntitySet<MENU_HAS_ITEM> _MENU_HAS_ITEMs;
		
		private EntitySet<ORDER_HAS_ITEM> _ORDER_HAS_ITEMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnM_IDChanging(int value);
    partial void OnM_IDChanged();
    partial void OnM_NAMEChanging(string value);
    partial void OnM_NAMEChanged();
    partial void OnM_DESCRIPTIONChanging(string value);
    partial void OnM_DESCRIPTIONChanged();
    partial void OnM_CREATED_ATChanging(System.DateTime value);
    partial void OnM_CREATED_ATChanged();
    partial void OnM_UPDATED_ATChanging(System.DateTime value);
    partial void OnM_UPDATED_ATChanged();
    #endregion
		
		public MENU()
		{
			this._MENU_HAS_ITEMs = new EntitySet<MENU_HAS_ITEM>(new Action<MENU_HAS_ITEM>(this.attach_MENU_HAS_ITEMs), new Action<MENU_HAS_ITEM>(this.detach_MENU_HAS_ITEMs));
			this._ORDER_HAS_ITEMs = new EntitySet<ORDER_HAS_ITEM>(new Action<ORDER_HAS_ITEM>(this.attach_ORDER_HAS_ITEMs), new Action<ORDER_HAS_ITEM>(this.detach_ORDER_HAS_ITEMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int M_ID
		{
			get
			{
				return this._M_ID;
			}
			set
			{
				if ((this._M_ID != value))
				{
					this.OnM_IDChanging(value);
					this.SendPropertyChanging();
					this._M_ID = value;
					this.SendPropertyChanged("M_ID");
					this.OnM_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_NAME", DbType="VarChar(35) NOT NULL", CanBeNull=false)]
		public string M_NAME
		{
			get
			{
				return this._M_NAME;
			}
			set
			{
				if ((this._M_NAME != value))
				{
					this.OnM_NAMEChanging(value);
					this.SendPropertyChanging();
					this._M_NAME = value;
					this.SendPropertyChanged("M_NAME");
					this.OnM_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_DESCRIPTION", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string M_DESCRIPTION
		{
			get
			{
				return this._M_DESCRIPTION;
			}
			set
			{
				if ((this._M_DESCRIPTION != value))
				{
					this.OnM_DESCRIPTIONChanging(value);
					this.SendPropertyChanging();
					this._M_DESCRIPTION = value;
					this.SendPropertyChanged("M_DESCRIPTION");
					this.OnM_DESCRIPTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_CREATED_AT", DbType="DateTime NOT NULL")]
		public System.DateTime M_CREATED_AT
		{
			get
			{
				return this._M_CREATED_AT;
			}
			set
			{
				if ((this._M_CREATED_AT != value))
				{
					this.OnM_CREATED_ATChanging(value);
					this.SendPropertyChanging();
					this._M_CREATED_AT = value;
					this.SendPropertyChanged("M_CREATED_AT");
					this.OnM_CREATED_ATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_UPDATED_AT", DbType="DateTime NOT NULL")]
		public System.DateTime M_UPDATED_AT
		{
			get
			{
				return this._M_UPDATED_AT;
			}
			set
			{
				if ((this._M_UPDATED_AT != value))
				{
					this.OnM_UPDATED_ATChanging(value);
					this.SendPropertyChanging();
					this._M_UPDATED_AT = value;
					this.SendPropertyChanged("M_UPDATED_AT");
					this.OnM_UPDATED_ATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MENU_MENU_HAS_ITEM", Storage="_MENU_HAS_ITEMs", ThisKey="M_ID", OtherKey="MENU_ID")]
		public EntitySet<MENU_HAS_ITEM> MENU_HAS_ITEMs
		{
			get
			{
				return this._MENU_HAS_ITEMs;
			}
			set
			{
				this._MENU_HAS_ITEMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MENU_ORDER_HAS_ITEM", Storage="_ORDER_HAS_ITEMs", ThisKey="M_ID", OtherKey="M_ID")]
		public EntitySet<ORDER_HAS_ITEM> ORDER_HAS_ITEMs
		{
			get
			{
				return this._ORDER_HAS_ITEMs;
			}
			set
			{
				this._ORDER_HAS_ITEMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MENU_HAS_ITEMs(MENU_HAS_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.MENU = this;
		}
		
		private void detach_MENU_HAS_ITEMs(MENU_HAS_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.MENU = null;
		}
		
		private void attach_ORDER_HAS_ITEMs(ORDER_HAS_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.MENU = this;
		}
		
		private void detach_ORDER_HAS_ITEMs(ORDER_HAS_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.MENU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ITEM")]
	public partial class ITEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ITEM_ID;
		
		private string _I_NAME;
		
		private string _I_DESCRIPTION;
		
		private decimal _I_PRICE;
		
		private decimal _I_COST;
		
		private int _I_QUANTITY;
		
		private EntitySet<ITEM_HAS_INGREDIENT> _ITEM_HAS_INGREDIENTs;
		
		private EntitySet<MENU_HAS_ITEM> _MENU_HAS_ITEMs;
		
		private EntitySet<ORDER_HAS_ITEM> _ORDER_HAS_ITEMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnITEM_IDChanging(int value);
    partial void OnITEM_IDChanged();
    partial void OnI_NAMEChanging(string value);
    partial void OnI_NAMEChanged();
    partial void OnI_DESCRIPTIONChanging(string value);
    partial void OnI_DESCRIPTIONChanged();
    partial void OnI_PRICEChanging(decimal value);
    partial void OnI_PRICEChanged();
    partial void OnI_COSTChanging(decimal value);
    partial void OnI_COSTChanged();
    partial void OnI_QUANTITYChanging(int value);
    partial void OnI_QUANTITYChanged();
    #endregion
		
		public ITEM()
		{
			this._ITEM_HAS_INGREDIENTs = new EntitySet<ITEM_HAS_INGREDIENT>(new Action<ITEM_HAS_INGREDIENT>(this.attach_ITEM_HAS_INGREDIENTs), new Action<ITEM_HAS_INGREDIENT>(this.detach_ITEM_HAS_INGREDIENTs));
			this._MENU_HAS_ITEMs = new EntitySet<MENU_HAS_ITEM>(new Action<MENU_HAS_ITEM>(this.attach_MENU_HAS_ITEMs), new Action<MENU_HAS_ITEM>(this.detach_MENU_HAS_ITEMs));
			this._ORDER_HAS_ITEMs = new EntitySet<ORDER_HAS_ITEM>(new Action<ORDER_HAS_ITEM>(this.attach_ORDER_HAS_ITEMs), new Action<ORDER_HAS_ITEM>(this.detach_ORDER_HAS_ITEMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ITEM_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ITEM_ID
		{
			get
			{
				return this._ITEM_ID;
			}
			set
			{
				if ((this._ITEM_ID != value))
				{
					this.OnITEM_IDChanging(value);
					this.SendPropertyChanging();
					this._ITEM_ID = value;
					this.SendPropertyChanged("ITEM_ID");
					this.OnITEM_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_NAME", DbType="VarChar(35) NOT NULL", CanBeNull=false)]
		public string I_NAME
		{
			get
			{
				return this._I_NAME;
			}
			set
			{
				if ((this._I_NAME != value))
				{
					this.OnI_NAMEChanging(value);
					this.SendPropertyChanging();
					this._I_NAME = value;
					this.SendPropertyChanged("I_NAME");
					this.OnI_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_DESCRIPTION", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string I_DESCRIPTION
		{
			get
			{
				return this._I_DESCRIPTION;
			}
			set
			{
				if ((this._I_DESCRIPTION != value))
				{
					this.OnI_DESCRIPTIONChanging(value);
					this.SendPropertyChanging();
					this._I_DESCRIPTION = value;
					this.SendPropertyChanged("I_DESCRIPTION");
					this.OnI_DESCRIPTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_PRICE", DbType="Decimal(18,0) NOT NULL")]
		public decimal I_PRICE
		{
			get
			{
				return this._I_PRICE;
			}
			set
			{
				if ((this._I_PRICE != value))
				{
					this.OnI_PRICEChanging(value);
					this.SendPropertyChanging();
					this._I_PRICE = value;
					this.SendPropertyChanged("I_PRICE");
					this.OnI_PRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_COST", DbType="Decimal(18,0) NOT NULL")]
		public decimal I_COST
		{
			get
			{
				return this._I_COST;
			}
			set
			{
				if ((this._I_COST != value))
				{
					this.OnI_COSTChanging(value);
					this.SendPropertyChanging();
					this._I_COST = value;
					this.SendPropertyChanged("I_COST");
					this.OnI_COSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_QUANTITY", DbType="Int NOT NULL")]
		public int I_QUANTITY
		{
			get
			{
				return this._I_QUANTITY;
			}
			set
			{
				if ((this._I_QUANTITY != value))
				{
					this.OnI_QUANTITYChanging(value);
					this.SendPropertyChanging();
					this._I_QUANTITY = value;
					this.SendPropertyChanged("I_QUANTITY");
					this.OnI_QUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ITEM_ITEM_HAS_INGREDIENT", Storage="_ITEM_HAS_INGREDIENTs", ThisKey="ITEM_ID", OtherKey="ITEM_ID")]
		public EntitySet<ITEM_HAS_INGREDIENT> ITEM_HAS_INGREDIENTs
		{
			get
			{
				return this._ITEM_HAS_INGREDIENTs;
			}
			set
			{
				this._ITEM_HAS_INGREDIENTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ITEM_MENU_HAS_ITEM", Storage="_MENU_HAS_ITEMs", ThisKey="ITEM_ID", OtherKey="ITEM_ID")]
		public EntitySet<MENU_HAS_ITEM> MENU_HAS_ITEMs
		{
			get
			{
				return this._MENU_HAS_ITEMs;
			}
			set
			{
				this._MENU_HAS_ITEMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ITEM_ORDER_HAS_ITEM", Storage="_ORDER_HAS_ITEMs", ThisKey="ITEM_ID", OtherKey="ITEM_ID")]
		public EntitySet<ORDER_HAS_ITEM> ORDER_HAS_ITEMs
		{
			get
			{
				return this._ORDER_HAS_ITEMs;
			}
			set
			{
				this._ORDER_HAS_ITEMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ITEM_HAS_INGREDIENTs(ITEM_HAS_INGREDIENT entity)
		{
			this.SendPropertyChanging();
			entity.ITEM = this;
		}
		
		private void detach_ITEM_HAS_INGREDIENTs(ITEM_HAS_INGREDIENT entity)
		{
			this.SendPropertyChanging();
			entity.ITEM = null;
		}
		
		private void attach_MENU_HAS_ITEMs(MENU_HAS_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.ITEM = this;
		}
		
		private void detach_MENU_HAS_ITEMs(MENU_HAS_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.ITEM = null;
		}
		
		private void attach_ORDER_HAS_ITEMs(ORDER_HAS_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.ITEM = this;
		}
		
		private void detach_ORDER_HAS_ITEMs(ORDER_HAS_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.ITEM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INGREDIENTS")]
	public partial class INGREDIENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _INGRED_ID;
		
		private string _INGRED_NAME;
		
		private decimal _INGRED_COST;
		
		private string _INGRED_SIZE;
		
		private EntitySet<ITEM_HAS_INGREDIENT> _ITEM_HAS_INGREDIENTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnINGRED_IDChanging(int value);
    partial void OnINGRED_IDChanged();
    partial void OnINGRED_NAMEChanging(string value);
    partial void OnINGRED_NAMEChanged();
    partial void OnINGRED_COSTChanging(decimal value);
    partial void OnINGRED_COSTChanged();
    partial void OnINGRED_SIZEChanging(string value);
    partial void OnINGRED_SIZEChanged();
    #endregion
		
		public INGREDIENT()
		{
			this._ITEM_HAS_INGREDIENTs = new EntitySet<ITEM_HAS_INGREDIENT>(new Action<ITEM_HAS_INGREDIENT>(this.attach_ITEM_HAS_INGREDIENTs), new Action<ITEM_HAS_INGREDIENT>(this.detach_ITEM_HAS_INGREDIENTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INGRED_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int INGRED_ID
		{
			get
			{
				return this._INGRED_ID;
			}
			set
			{
				if ((this._INGRED_ID != value))
				{
					this.OnINGRED_IDChanging(value);
					this.SendPropertyChanging();
					this._INGRED_ID = value;
					this.SendPropertyChanged("INGRED_ID");
					this.OnINGRED_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INGRED_NAME", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string INGRED_NAME
		{
			get
			{
				return this._INGRED_NAME;
			}
			set
			{
				if ((this._INGRED_NAME != value))
				{
					this.OnINGRED_NAMEChanging(value);
					this.SendPropertyChanging();
					this._INGRED_NAME = value;
					this.SendPropertyChanged("INGRED_NAME");
					this.OnINGRED_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INGRED_COST", DbType="Decimal(18,0) NOT NULL")]
		public decimal INGRED_COST
		{
			get
			{
				return this._INGRED_COST;
			}
			set
			{
				if ((this._INGRED_COST != value))
				{
					this.OnINGRED_COSTChanging(value);
					this.SendPropertyChanging();
					this._INGRED_COST = value;
					this.SendPropertyChanged("INGRED_COST");
					this.OnINGRED_COSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INGRED_SIZE", DbType="VarChar(45)")]
		public string INGRED_SIZE
		{
			get
			{
				return this._INGRED_SIZE;
			}
			set
			{
				if ((this._INGRED_SIZE != value))
				{
					this.OnINGRED_SIZEChanging(value);
					this.SendPropertyChanging();
					this._INGRED_SIZE = value;
					this.SendPropertyChanged("INGRED_SIZE");
					this.OnINGRED_SIZEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INGREDIENT_ITEM_HAS_INGREDIENT", Storage="_ITEM_HAS_INGREDIENTs", ThisKey="INGRED_ID", OtherKey="INGRED_ID")]
		public EntitySet<ITEM_HAS_INGREDIENT> ITEM_HAS_INGREDIENTs
		{
			get
			{
				return this._ITEM_HAS_INGREDIENTs;
			}
			set
			{
				this._ITEM_HAS_INGREDIENTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ITEM_HAS_INGREDIENTs(ITEM_HAS_INGREDIENT entity)
		{
			this.SendPropertyChanging();
			entity.INGREDIENT = this;
		}
		
		private void detach_ITEM_HAS_INGREDIENTs(ITEM_HAS_INGREDIENT entity)
		{
			this.SendPropertyChanging();
			entity.INGREDIENT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ITEM_HAS_INGREDIENTS")]
	public partial class ITEM_HAS_INGREDIENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _P_CODE;
		
		private int _ITEM_ID;
		
		private int _INGRED_ID;
		
		private EntityRef<INGREDIENT> _INGREDIENT;
		
		private EntityRef<ITEM> _ITEM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnP_CODEChanging(int value);
    partial void OnP_CODEChanged();
    partial void OnITEM_IDChanging(int value);
    partial void OnITEM_IDChanged();
    partial void OnINGRED_IDChanging(int value);
    partial void OnINGRED_IDChanged();
    #endregion
		
		public ITEM_HAS_INGREDIENT()
		{
			this._INGREDIENT = default(EntityRef<INGREDIENT>);
			this._ITEM = default(EntityRef<ITEM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_P_CODE", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int P_CODE
		{
			get
			{
				return this._P_CODE;
			}
			set
			{
				if ((this._P_CODE != value))
				{
					this.OnP_CODEChanging(value);
					this.SendPropertyChanging();
					this._P_CODE = value;
					this.SendPropertyChanged("P_CODE");
					this.OnP_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ITEM_ID", DbType="Int NOT NULL")]
		public int ITEM_ID
		{
			get
			{
				return this._ITEM_ID;
			}
			set
			{
				if ((this._ITEM_ID != value))
				{
					if (this._ITEM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnITEM_IDChanging(value);
					this.SendPropertyChanging();
					this._ITEM_ID = value;
					this.SendPropertyChanged("ITEM_ID");
					this.OnITEM_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INGRED_ID", DbType="Int NOT NULL")]
		public int INGRED_ID
		{
			get
			{
				return this._INGRED_ID;
			}
			set
			{
				if ((this._INGRED_ID != value))
				{
					if (this._INGREDIENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnINGRED_IDChanging(value);
					this.SendPropertyChanging();
					this._INGRED_ID = value;
					this.SendPropertyChanged("INGRED_ID");
					this.OnINGRED_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INGREDIENT_ITEM_HAS_INGREDIENT", Storage="_INGREDIENT", ThisKey="INGRED_ID", OtherKey="INGRED_ID", IsForeignKey=true)]
		public INGREDIENT INGREDIENT
		{
			get
			{
				return this._INGREDIENT.Entity;
			}
			set
			{
				INGREDIENT previousValue = this._INGREDIENT.Entity;
				if (((previousValue != value) 
							|| (this._INGREDIENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INGREDIENT.Entity = null;
						previousValue.ITEM_HAS_INGREDIENTs.Remove(this);
					}
					this._INGREDIENT.Entity = value;
					if ((value != null))
					{
						value.ITEM_HAS_INGREDIENTs.Add(this);
						this._INGRED_ID = value.INGRED_ID;
					}
					else
					{
						this._INGRED_ID = default(int);
					}
					this.SendPropertyChanged("INGREDIENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ITEM_ITEM_HAS_INGREDIENT", Storage="_ITEM", ThisKey="ITEM_ID", OtherKey="ITEM_ID", IsForeignKey=true)]
		public ITEM ITEM
		{
			get
			{
				return this._ITEM.Entity;
			}
			set
			{
				ITEM previousValue = this._ITEM.Entity;
				if (((previousValue != value) 
							|| (this._ITEM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ITEM.Entity = null;
						previousValue.ITEM_HAS_INGREDIENTs.Remove(this);
					}
					this._ITEM.Entity = value;
					if ((value != null))
					{
						value.ITEM_HAS_INGREDIENTs.Add(this);
						this._ITEM_ID = value.ITEM_ID;
					}
					else
					{
						this._ITEM_ID = default(int);
					}
					this.SendPropertyChanged("ITEM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MENU_HAS_ITEM")]
	public partial class MENU_HAS_ITEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _MENU_ID;
		
		private int _ITEM_ID;
		
		private bool _ACTIVE;
		
		private EntityRef<ITEM> _ITEM;
		
		private EntityRef<MENU> _MENU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMENU_IDChanging(int value);
    partial void OnMENU_IDChanged();
    partial void OnITEM_IDChanging(int value);
    partial void OnITEM_IDChanged();
    partial void OnACTIVEChanging(bool value);
    partial void OnACTIVEChanged();
    #endregion
		
		public MENU_HAS_ITEM()
		{
			this._ITEM = default(EntityRef<ITEM>);
			this._MENU = default(EntityRef<MENU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MENU_ID", DbType="Int NOT NULL")]
		public int MENU_ID
		{
			get
			{
				return this._MENU_ID;
			}
			set
			{
				if ((this._MENU_ID != value))
				{
					if (this._MENU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMENU_IDChanging(value);
					this.SendPropertyChanging();
					this._MENU_ID = value;
					this.SendPropertyChanged("MENU_ID");
					this.OnMENU_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ITEM_ID", DbType="Int NOT NULL")]
		public int ITEM_ID
		{
			get
			{
				return this._ITEM_ID;
			}
			set
			{
				if ((this._ITEM_ID != value))
				{
					if (this._ITEM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnITEM_IDChanging(value);
					this.SendPropertyChanging();
					this._ITEM_ID = value;
					this.SendPropertyChanged("ITEM_ID");
					this.OnITEM_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTIVE", DbType="Bit NOT NULL")]
		public bool ACTIVE
		{
			get
			{
				return this._ACTIVE;
			}
			set
			{
				if ((this._ACTIVE != value))
				{
					this.OnACTIVEChanging(value);
					this.SendPropertyChanging();
					this._ACTIVE = value;
					this.SendPropertyChanged("ACTIVE");
					this.OnACTIVEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ITEM_MENU_HAS_ITEM", Storage="_ITEM", ThisKey="ITEM_ID", OtherKey="ITEM_ID", IsForeignKey=true)]
		public ITEM ITEM
		{
			get
			{
				return this._ITEM.Entity;
			}
			set
			{
				ITEM previousValue = this._ITEM.Entity;
				if (((previousValue != value) 
							|| (this._ITEM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ITEM.Entity = null;
						previousValue.MENU_HAS_ITEMs.Remove(this);
					}
					this._ITEM.Entity = value;
					if ((value != null))
					{
						value.MENU_HAS_ITEMs.Add(this);
						this._ITEM_ID = value.ITEM_ID;
					}
					else
					{
						this._ITEM_ID = default(int);
					}
					this.SendPropertyChanged("ITEM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MENU_MENU_HAS_ITEM", Storage="_MENU", ThisKey="MENU_ID", OtherKey="M_ID", IsForeignKey=true)]
		public MENU MENU
		{
			get
			{
				return this._MENU.Entity;
			}
			set
			{
				MENU previousValue = this._MENU.Entity;
				if (((previousValue != value) 
							|| (this._MENU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MENU.Entity = null;
						previousValue.MENU_HAS_ITEMs.Remove(this);
					}
					this._MENU.Entity = value;
					if ((value != null))
					{
						value.MENU_HAS_ITEMs.Add(this);
						this._MENU_ID = value.M_ID;
					}
					else
					{
						this._MENU_ID = default(int);
					}
					this.SendPropertyChanged("MENU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORDERS")]
	public partial class ORDER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NUMBER;
		
		private System.DateTime _DATE;
		
		private string _ORDER_STATUS;
		
		private string _PAYMENT_STATUS;
		
		private System.Nullable<decimal> _TOTAL;
		
		private EntitySet<ORDER_HAS_ITEM> _ORDER_HAS_ITEMs;
		
		private EntitySet<CUSTOMER_HAS_ORDER> _CUSTOMER_HAS_ORDERs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNUMBERChanging(int value);
    partial void OnNUMBERChanged();
    partial void OnDATEChanging(System.DateTime value);
    partial void OnDATEChanged();
    partial void OnORDER_STATUSChanging(string value);
    partial void OnORDER_STATUSChanged();
    partial void OnPAYMENT_STATUSChanging(string value);
    partial void OnPAYMENT_STATUSChanged();
    partial void OnTOTALChanging(System.Nullable<decimal> value);
    partial void OnTOTALChanged();
    #endregion
		
		public ORDER()
		{
			this._ORDER_HAS_ITEMs = new EntitySet<ORDER_HAS_ITEM>(new Action<ORDER_HAS_ITEM>(this.attach_ORDER_HAS_ITEMs), new Action<ORDER_HAS_ITEM>(this.detach_ORDER_HAS_ITEMs));
			this._CUSTOMER_HAS_ORDERs = new EntitySet<CUSTOMER_HAS_ORDER>(new Action<CUSTOMER_HAS_ORDER>(this.attach_CUSTOMER_HAS_ORDERs), new Action<CUSTOMER_HAS_ORDER>(this.detach_CUSTOMER_HAS_ORDERs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NUMBER", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int NUMBER
		{
			get
			{
				return this._NUMBER;
			}
			set
			{
				if ((this._NUMBER != value))
				{
					this.OnNUMBERChanging(value);
					this.SendPropertyChanging();
					this._NUMBER = value;
					this.SendPropertyChanged("NUMBER");
					this.OnNUMBERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE", DbType="Date NOT NULL")]
		public System.DateTime DATE
		{
			get
			{
				return this._DATE;
			}
			set
			{
				if ((this._DATE != value))
				{
					this.OnDATEChanging(value);
					this.SendPropertyChanging();
					this._DATE = value;
					this.SendPropertyChanged("DATE");
					this.OnDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDER_STATUS", DbType="VarChar(13) NOT NULL", CanBeNull=false)]
		public string ORDER_STATUS
		{
			get
			{
				return this._ORDER_STATUS;
			}
			set
			{
				if ((this._ORDER_STATUS != value))
				{
					this.OnORDER_STATUSChanging(value);
					this.SendPropertyChanging();
					this._ORDER_STATUS = value;
					this.SendPropertyChanged("ORDER_STATUS");
					this.OnORDER_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAYMENT_STATUS", DbType="VarChar(13) NOT NULL", CanBeNull=false)]
		public string PAYMENT_STATUS
		{
			get
			{
				return this._PAYMENT_STATUS;
			}
			set
			{
				if ((this._PAYMENT_STATUS != value))
				{
					this.OnPAYMENT_STATUSChanging(value);
					this.SendPropertyChanging();
					this._PAYMENT_STATUS = value;
					this.SendPropertyChanged("PAYMENT_STATUS");
					this.OnPAYMENT_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this.OnTOTALChanging(value);
					this.SendPropertyChanging();
					this._TOTAL = value;
					this.SendPropertyChanged("TOTAL");
					this.OnTOTALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER_ORDER_HAS_ITEM", Storage="_ORDER_HAS_ITEMs", ThisKey="NUMBER", OtherKey="NUMBER")]
		public EntitySet<ORDER_HAS_ITEM> ORDER_HAS_ITEMs
		{
			get
			{
				return this._ORDER_HAS_ITEMs;
			}
			set
			{
				this._ORDER_HAS_ITEMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER_CUSTOMER_HAS_ORDER", Storage="_CUSTOMER_HAS_ORDERs", ThisKey="NUMBER", OtherKey="NUMBER")]
		public EntitySet<CUSTOMER_HAS_ORDER> CUSTOMER_HAS_ORDERs
		{
			get
			{
				return this._CUSTOMER_HAS_ORDERs;
			}
			set
			{
				this._CUSTOMER_HAS_ORDERs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ORDER_HAS_ITEMs(ORDER_HAS_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.ORDER = this;
		}
		
		private void detach_ORDER_HAS_ITEMs(ORDER_HAS_ITEM entity)
		{
			this.SendPropertyChanging();
			entity.ORDER = null;
		}
		
		private void attach_CUSTOMER_HAS_ORDERs(CUSTOMER_HAS_ORDER entity)
		{
			this.SendPropertyChanging();
			entity.ORDER = this;
		}
		
		private void detach_CUSTOMER_HAS_ORDERs(CUSTOMER_HAS_ORDER entity)
		{
			this.SendPropertyChanging();
			entity.ORDER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ORDER_HAS_ITEMS")]
	public partial class ORDER_HAS_ITEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _NUMBER;
		
		private int _M_ID;
		
		private int _ITEM_ID;
		
		private int _QUANTITY;
		
		private EntityRef<MENU> _MENU;
		
		private EntityRef<ITEM> _ITEM;
		
		private EntityRef<ORDER> _ORDER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNUMBERChanging(int value);
    partial void OnNUMBERChanged();
    partial void OnM_IDChanging(int value);
    partial void OnM_IDChanged();
    partial void OnITEM_IDChanging(int value);
    partial void OnITEM_IDChanged();
    partial void OnQUANTITYChanging(int value);
    partial void OnQUANTITYChanged();
    #endregion
		
		public ORDER_HAS_ITEM()
		{
			this._MENU = default(EntityRef<MENU>);
			this._ITEM = default(EntityRef<ITEM>);
			this._ORDER = default(EntityRef<ORDER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NUMBER", DbType="Int NOT NULL")]
		public int NUMBER
		{
			get
			{
				return this._NUMBER;
			}
			set
			{
				if ((this._NUMBER != value))
				{
					if (this._ORDER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNUMBERChanging(value);
					this.SendPropertyChanging();
					this._NUMBER = value;
					this.SendPropertyChanged("NUMBER");
					this.OnNUMBERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_M_ID", DbType="Int NOT NULL")]
		public int M_ID
		{
			get
			{
				return this._M_ID;
			}
			set
			{
				if ((this._M_ID != value))
				{
					if (this._MENU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnM_IDChanging(value);
					this.SendPropertyChanging();
					this._M_ID = value;
					this.SendPropertyChanged("M_ID");
					this.OnM_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ITEM_ID", DbType="Int NOT NULL")]
		public int ITEM_ID
		{
			get
			{
				return this._ITEM_ID;
			}
			set
			{
				if ((this._ITEM_ID != value))
				{
					if (this._ITEM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnITEM_IDChanging(value);
					this.SendPropertyChanging();
					this._ITEM_ID = value;
					this.SendPropertyChanged("ITEM_ID");
					this.OnITEM_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY", DbType="Int NOT NULL")]
		public int QUANTITY
		{
			get
			{
				return this._QUANTITY;
			}
			set
			{
				if ((this._QUANTITY != value))
				{
					this.OnQUANTITYChanging(value);
					this.SendPropertyChanging();
					this._QUANTITY = value;
					this.SendPropertyChanged("QUANTITY");
					this.OnQUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MENU_ORDER_HAS_ITEM", Storage="_MENU", ThisKey="M_ID", OtherKey="M_ID", IsForeignKey=true)]
		public MENU MENU
		{
			get
			{
				return this._MENU.Entity;
			}
			set
			{
				MENU previousValue = this._MENU.Entity;
				if (((previousValue != value) 
							|| (this._MENU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MENU.Entity = null;
						previousValue.ORDER_HAS_ITEMs.Remove(this);
					}
					this._MENU.Entity = value;
					if ((value != null))
					{
						value.ORDER_HAS_ITEMs.Add(this);
						this._M_ID = value.M_ID;
					}
					else
					{
						this._M_ID = default(int);
					}
					this.SendPropertyChanged("MENU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ITEM_ORDER_HAS_ITEM", Storage="_ITEM", ThisKey="ITEM_ID", OtherKey="ITEM_ID", IsForeignKey=true)]
		public ITEM ITEM
		{
			get
			{
				return this._ITEM.Entity;
			}
			set
			{
				ITEM previousValue = this._ITEM.Entity;
				if (((previousValue != value) 
							|| (this._ITEM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ITEM.Entity = null;
						previousValue.ORDER_HAS_ITEMs.Remove(this);
					}
					this._ITEM.Entity = value;
					if ((value != null))
					{
						value.ORDER_HAS_ITEMs.Add(this);
						this._ITEM_ID = value.ITEM_ID;
					}
					else
					{
						this._ITEM_ID = default(int);
					}
					this.SendPropertyChanged("ITEM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER_ORDER_HAS_ITEM", Storage="_ORDER", ThisKey="NUMBER", OtherKey="NUMBER", IsForeignKey=true)]
		public ORDER ORDER
		{
			get
			{
				return this._ORDER.Entity;
			}
			set
			{
				ORDER previousValue = this._ORDER.Entity;
				if (((previousValue != value) 
							|| (this._ORDER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ORDER.Entity = null;
						previousValue.ORDER_HAS_ITEMs.Remove(this);
					}
					this._ORDER.Entity = value;
					if ((value != null))
					{
						value.ORDER_HAS_ITEMs.Add(this);
						this._NUMBER = value.NUMBER;
					}
					else
					{
						this._NUMBER = default(int);
					}
					this.SendPropertyChanged("ORDER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUSTOMER_HAS_ORDERS")]
	public partial class CUSTOMER_HAS_ORDER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CUST_ID;
		
		private int _NUMBER;
		
		private EntityRef<CUSTOMER> _CUSTOMER;
		
		private EntityRef<ORDER> _ORDER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCUST_IDChanging(int value);
    partial void OnCUST_IDChanged();
    partial void OnNUMBERChanging(int value);
    partial void OnNUMBERChanged();
    #endregion
		
		public CUSTOMER_HAS_ORDER()
		{
			this._CUSTOMER = default(EntityRef<CUSTOMER>);
			this._ORDER = default(EntityRef<ORDER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUST_ID", DbType="Int NOT NULL")]
		public int CUST_ID
		{
			get
			{
				return this._CUST_ID;
			}
			set
			{
				if ((this._CUST_ID != value))
				{
					if (this._CUSTOMER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCUST_IDChanging(value);
					this.SendPropertyChanging();
					this._CUST_ID = value;
					this.SendPropertyChanged("CUST_ID");
					this.OnCUST_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NUMBER", DbType="Int NOT NULL")]
		public int NUMBER
		{
			get
			{
				return this._NUMBER;
			}
			set
			{
				if ((this._NUMBER != value))
				{
					if (this._ORDER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNUMBERChanging(value);
					this.SendPropertyChanging();
					this._NUMBER = value;
					this.SendPropertyChanged("NUMBER");
					this.OnNUMBERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_CUSTOMER_HAS_ORDER", Storage="_CUSTOMER", ThisKey="CUST_ID", OtherKey="CUST_ID", IsForeignKey=true)]
		public CUSTOMER CUSTOMER
		{
			get
			{
				return this._CUSTOMER.Entity;
			}
			set
			{
				CUSTOMER previousValue = this._CUSTOMER.Entity;
				if (((previousValue != value) 
							|| (this._CUSTOMER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUSTOMER.Entity = null;
						previousValue.CUSTOMER_HAS_ORDERs.Remove(this);
					}
					this._CUSTOMER.Entity = value;
					if ((value != null))
					{
						value.CUSTOMER_HAS_ORDERs.Add(this);
						this._CUST_ID = value.CUST_ID;
					}
					else
					{
						this._CUST_ID = default(int);
					}
					this.SendPropertyChanged("CUSTOMER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ORDER_CUSTOMER_HAS_ORDER", Storage="_ORDER", ThisKey="NUMBER", OtherKey="NUMBER", IsForeignKey=true)]
		public ORDER ORDER
		{
			get
			{
				return this._ORDER.Entity;
			}
			set
			{
				ORDER previousValue = this._ORDER.Entity;
				if (((previousValue != value) 
							|| (this._ORDER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ORDER.Entity = null;
						previousValue.CUSTOMER_HAS_ORDERs.Remove(this);
					}
					this._ORDER.Entity = value;
					if ((value != null))
					{
						value.CUSTOMER_HAS_ORDERs.Add(this);
						this._NUMBER = value.NUMBER;
					}
					else
					{
						this._NUMBER = default(int);
					}
					this.SendPropertyChanged("ORDER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class SelectSortedOrdersResult
	{
		
		private int _NUMBER;
		
		private System.DateTime _DATE;
		
		private string _ORDER_STATUS;
		
		private string _PAYMENT_STATUS;
		
		private System.Nullable<decimal> _TOTAL;
		
		public SelectSortedOrdersResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NUMBER", DbType="Int NOT NULL")]
		public int NUMBER
		{
			get
			{
				return this._NUMBER;
			}
			set
			{
				if ((this._NUMBER != value))
				{
					this._NUMBER = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE", DbType="Date NOT NULL")]
		public System.DateTime DATE
		{
			get
			{
				return this._DATE;
			}
			set
			{
				if ((this._DATE != value))
				{
					this._DATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDER_STATUS", DbType="VarChar(13) NOT NULL", CanBeNull=false)]
		public string ORDER_STATUS
		{
			get
			{
				return this._ORDER_STATUS;
			}
			set
			{
				if ((this._ORDER_STATUS != value))
				{
					this._ORDER_STATUS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAYMENT_STATUS", DbType="VarChar(13) NOT NULL", CanBeNull=false)]
		public string PAYMENT_STATUS
		{
			get
			{
				return this._PAYMENT_STATUS;
			}
			set
			{
				if ((this._PAYMENT_STATUS != value))
				{
					this._PAYMENT_STATUS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
